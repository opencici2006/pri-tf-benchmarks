#This file exports the bazel build opts for AVX512 platforms (skylake) for gcc versions that support -march=broadwell, but not -march=skylake (i.e. 5.3.0 < gcc version < 6.1.0). 
MIN_GCC_MAJOR_VERSION=5
MIN_GCC_MINOR_VERSION=3
MIN_GCC_REVISION=0
GCC_VERSION_STR=$(gcc -dumpversion)
echo "GCC Version: ${GCC_VERSION_STR}"
IFS='.' read -r -a GCC_VERSION <<< ${GCC_VERSION_STR}
if [ "${GCC_VERSION[0]}" -lt "${MIN_GCC_MAJOR_VERSION}" ] ;
then
  echo "Your version of GCC is too old: ${GCC_VERSION_STR}; it must be at least ${MIN_GCC_MAJOR_VERSION}.${MIN_GCC_MINOR_VERSION}.${MIN_GCC_REVISION}"
  return 1 
fi

if [ "${GCC_VERSION[1]}" -lt ${MIN_GCC_MINOR_VERSION} ] ;
then
  echo "Your version of GCC is too old: ${GCC_VERSION_STR}; it must be at least ${MIN_GCC_MAJOR_VERSION}.${MIN_GCC_MINOR_VERSION}."
  return 1
fi


echo "GCC ${GCC_VERSION_STR}: OK"

#Don't use the C++11 ABI; use the old one 
#-march=skylake-avx512 enables MOVBE, MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, POPCNT, PKU, AVX, AVX2, AES, PCLMUL, FSGSBASE, RDRND, FMA, BMI, BMI2, F16C, RDSEED, ADCX, PREFETCHW, CLFLUSHOPT, XSAVEC, XSAVES, AVX512F, AVX512VL, AVX512BW, AVX512DQ and AVX512CD instruction set support. See https://gcc.gnu.org/onlinedocs/gcc-6.1.0/gcc/x86-Options.html#x86-Options. Note that -march=skylake-avx512 enables more instructions than -march=skylake, particularly:
# PKU
# AVX512F
# AVX512VL
# AVX512BW
# AVX512DQ 
# AVX512CD
# Ubuntu 16.04 LTS default gcc version is 5.4.0, which doesn't have support for -march=skylake*, but this version of the compiler supports -march=broadwell and explicit support for each of the skylake ISA instructions. 
BAZEL_BUILD_OPTS="--cxxopt=-D_GLIBCXX_USE_CXX11_ABI=0 \
		--copt=-march=broadwell \ 
		--copt=-mclflushopt \
                --copt=-mxsavec \
                --copt=-mxsaves \
                --copt=-mavx512f \
                --copt=-mavx512vl \
                --copt=-mavx512bw \
                --copt=-mavx512dq \
                --copt=-mavx512cd \
                --copt=-O3"

echo "exporting BAZEL_BUILD_OPTS=${BAZEL_BUILD_OPTS}"
export BAZEL_BUILD_OPTS=${BAZEL_BUILD_OPTS}
